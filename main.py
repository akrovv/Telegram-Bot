import openai
import pytesseract
from PIL import Image
from io import BytesIO
import telebot
from telebot import types
import datetime

bot = telebot.TeleBot('SECRET_KEY')

def get_image_from_bytes(b):
    stream = BytesIO(b)
    image = Image.open(stream).convert("RGBA")
    stream.close()
    return image

def get_text_from_img(img):
    image = get_image_from_bytes(img)
    string = pytesseract.image_to_string(image, lang="rus+eng")
    return "—Ä–∞—Å–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ " + string

def run_ask(message):
    model_engine = "text-davinci-003"
    prompt = message

    completion = openai.Completion.create(
        engine=model_engine,
        prompt=prompt,
        max_tokens=1024,
        temperature=0.5,
        top_p=1,
        frequency_penalty=0,
        presence_penalty=0
    )

    return completion.choices[0].text

@bot.message_handler(commands=['start'])
def start(message):
    global is_gpt
    is_gpt = False
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton("üëã –ù–∞—á–∞—Ç—å")
    btn2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!\n /help - –¥–ª—è –ø–æ–º–æ—â–∏\n/answer - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", reply_markup=markup)

@bot.message_handler(commands=['help'])
def help(message):
    global is_gpt
    is_gpt = False
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton("–ù–∞–∑–∞–¥")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "–ü–æ–º–æ—â—å: –±–ª–∞ –±–ª–∞ –±–ª–∞", reply_markup=markup)

@bot.message_handler(commands=['answer'])
def send_question(message):
    global is_gpt
    is_gpt = True
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn = types.KeyboardButton("–ù–∞–∑–∞–¥")
    markup.add(btn)
    bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É: ", reply_markup=markup)

@bot.message_handler(content_types=['photo'])
def send_img(message):
    global is_gpt
    is_gpt = True
    photo_id = message.photo[-1].file_id
    # –î–æ—Å—Ç–∞—ë–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    bot.send_message(message.from_user.id, "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –≤–æ–ø—Ä–æ—Å...")
    photo_file = bot.get_file(photo_id)  # <class 'telebot.types.File'>
    photo_bytes = bot.download_file(photo_file.file_path)  # <class 'bytes'>
    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º
    bot.send_message(message.from_user.id, run_ask(get_text_from_img(photo_bytes)))

@bot.message_handler()
def get_user_text(message):
    if message.text == '–ù–∞–∑–∞–¥' or message.text == 'üëã –ù–∞—á–∞—Ç—å':
        start(message)
    elif message.text == '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        send_question(message)
    else:
        if is_gpt:
            msg = bot.send_message(message.from_user.id, "‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –≤–æ–ø—Ä–æ—Å...")
            bot.edit_message_text(run_ask(message.text), chat_id=message.chat.id, message_id=msg.message_id)
        else:
            bot.send_message(message.from_user.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ. –ú–æ–∂–µ—Ç–µ –ø–æ—è—Å–Ω–∏—Ç—å?")


if __name__ == '__main__':
    MAX_MESSAGES_PER_DAY = 10
    openai.api_key = "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"
    is_gpt = False
    bot.polling(none_stop=True, interval=0)
